<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Table</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-900 text-white p-10">
    <div class="flex items-center justify-center">
        <form id="eventForm" class="flex gap-2 bg-gray-800 p-4 rounded-lg">
            <input type="text" id="name" placeholder="Name" class="bg-gray-700 text-white p-2 rounded">
            <textarea id="description" placeholder="Description" class="bg-gray-700 text-white p-2 rounded"></textarea>
            <input type="text" id="location" placeholder="Location" class="bg-gray-700 text-white p-2 rounded">
            <input type="datetime-local" id="start_time" class="bg-gray-700 text-white p-2 rounded">
            <input type="datetime-local" id="end_time" class="bg-gray-700 text-white p-2 rounded">
            <input type="number" id="created_by" placeholder="Created By" class="bg-gray-700 text-white p-2 rounded">
            <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded">Insert</button>
        </form>
    </div>
    <div class="overflow-x-auto">
        <table class="table-auto  border-collapse border border-gray-700 text-sm">
            <thead>
                <tr class="bg-gray-800">
                    <th class="border border-gray-600 p-2">ID</th>
                    <th class="border border-gray-600 p-2">Name</th>
                    <th class="border border-gray-600 p-2">Description</th>
                    <th class="border border-gray-600 p-2">Location</th>
                    <th class="border border-gray-600 p-2">Start Time</th>
                    <th class="border border-gray-600 p-2">End Time</th>
                    <th class="border border-gray-600 p-2">Users</th>
                    <th class="border border-gray-600 p-2">Created By</th>
                    <th class="border border-gray-600 p-2">Deleted</th>
                    <th class="border border-gray-600 p-2">Created At</th>
                    <th class="border border-gray-600 p-2">Updated At</th>
                    <th class="border border-gray-600 p-2">Actions</th>
                    <th class="border border-gray-600 p-2">Image</th>
                </tr>
            </thead>
            <tbody id="eventTableBody" class="bg-gray-700"></tbody>
        </table>
    </div>

    <script>
        async function fetchEvents() {
            try {
                const response = await axios.get('http://localhost:3000/api/event/dashbord');
                const events = response.data;
                const tableBody = document.getElementById('eventTableBody');
                tableBody.innerHTML = '';

                events.forEach(event => {
                    const formattedStartTime = event.start_time ? new Date(event.start_time).toISOString().slice(0, 16) : '';
                    const formattedEndTime = event.end_time ? new Date(event.end_time).toISOString().slice(0, 16) : '';

                    const row = document.createElement('tr');
                    row.classList.add("border", "border-gray-600");

                    row.innerHTML = `
                <td class='p-2'><input type='text' class='bg-gray-800 text-white p-1 w-full' value='${event.id}' readonly></td>
                <td class='p-2'><input type='text' class='bg-gray-800 text-white p-1 w-full event-name' value='${event.name}'></td>
                <td class='p-2'>
                    <textarea class='bg-gray-800 text-white p-1 w-full event-description'>${event.description}</textarea>
                </td>
                <td class='p-2'><input type='text' class='bg-gray-800 text-white p-1 w-full event-location' value='${event.location}'></td>
                <td class='p-2'><input type='datetime-local' class='bg-gray-800 text-white p-1 w-full event-start-time' value='${formattedStartTime}'></td>
                <td class='p-2'><input type='datetime-local' class='bg-gray-800 text-white p-1 w-full event-end-time' value='${formattedEndTime}'></td>
                <td class='p-2'><input type='number' class='bg-gray-800 text-white p-1 w-full event-numOFUser' value='${event.numOFUser}'></td>
                <td class='p-2'><input type='number' class='bg-gray-800 text-white p-1 w-full event-created-by' value='${event.created_by || ''}'></td>
                <td class='p-2'><input type='checkbox' class='event-is-deleted' ${event.is_deleted ? 'checked' : ''}></td>
                <td class='p-2'><input type='text' class='bg-gray-800 text-white p-1 w-full' value='${event.created_at}' readonly></td>
                <td class='p-2'><input type='text' class='bg-gray-800 text-white p-1 w-full' value='${event.updated_at}' readonly></td>
                <td class='p-2'>
                    <img src="${event.image}" class="w-14 h-14"/>
                    <input type="file" class="bg-gray-800 text-white p-1 w-full image">
                </td>
                <td class='p-2'>
                    <button class='bg-blue-500 text-white px-3 py-1 rounded update-btn' data-id='${event.id}'>Update</button>
                    <button class='bg-yellow-500 text-white px-3 py-1 rounded image-update-btn' data-id='${event.id}'>Image Update</button>
                </td>
            `;
                    tableBody.appendChild(row);
                });
            } catch (error) {
                console.error("Error fetching events:", error);
            }
        }

        async function UpdateImage(id) {
            const row = document.querySelector(`[data-id='${id}']`).closest("tr");
            const imageInput = row.querySelector(".image");

            if (!imageInput.files.length) {
                alert("Please select an image first.");
                return;
            }

            const formData = new FormData();
            formData.append("image", imageInput.files[0]);

            try {
                await axios.put(`http://localhost:3000/api/event/image/${id}`, formData, {
                    headers: { "Content-Type": "multipart/form-data" }
                });

                alert("Image updated successfully ✅");
                await fetchEvents(); // Refresh the table after update
            } catch (error) {
                alert("❌ Error updating image!");
                console.error("Error updating image:", error);
            }
        }

        document.addEventListener("DOMContentLoaded", async function () {
            await fetchEvents();

            document.getElementById("eventTableBody").addEventListener("click", async function (event) {
                const target = event.target;

                if (target.classList.contains("update-btn")) {
                    // Handle full event update
                    const row = target.closest("tr");
                    const id = target.getAttribute("data-id");
                    const updatedEvent = {
                        name: row.querySelector(".event-name").value,
                        description: row.querySelector(".event-description").value,
                        location: row.querySelector(".event-location").value,
                        start_time: row.querySelector(".event-start-time").value,
                        end_time: row.querySelector(".event-end-time").value,
                        numOFUser: parseInt(row.querySelector(".event-numOFUser").value) || 0,
                        created_by: parseInt(row.querySelector(".event-created-by").value) || null,
                        is_deleted: row.querySelector(".event-is-deleted").checked
                    };

                    try {
                        await axios.put(`http://localhost:3000/api/event/dashbord/${id}`, updatedEvent);
                        console.log(updatedEvent);
                        alert("Event updated successfully ✅");
                        await fetchEvents(); // Refresh table after update
                    } catch (error) {
                        alert("❌ Error updating event!");
                        console.error("Error updating event:", error);
                    }
                }
                else if (target.classList.contains("image-update-btn")) {
                    // Handle only image update
                    const id = target.getAttribute("data-id");
                    await UpdateImage(id);
                }
            });
        });

    </script>
    <script>
        document.getElementById('eventForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const eventData = {
                name: document.getElementById('name').value,
                description: document.getElementById('description').value,
                location: document.getElementById('location').value,
                start_time: document.getElementById('start_time').value,
                end_time: document.getElementById('end_time').value,
                created_by: document.getElementById('created_by').value
            };
            console.log(eventData);

            try {
                await axios.post('http://localhost:3000/api/event/', eventData);
                alert('Event inserted successfully');
                document.getElementById('eventForm').reset();
            } catch (error) {
                console.error('Error inserting event:', error);
            }
        });
    </script>
</body>

</html>