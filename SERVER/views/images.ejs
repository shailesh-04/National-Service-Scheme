<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Upload</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>

<div class="container mt-5">
    <h2 class="text-center">Upload Multiple Images</h2>
    <form id="uploadForm" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="event_id" class="form-label">Event ID:</label>
            <input type="number" id="event_id" name="E_id" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="images" class="form-label">Select Images:</label>
            <input type="file" id="images" name="images" multiple class="form-control" accept="image/*" required>
        </div>
        <button type="submit" class="btn btn-primary">Upload</button>
    </form>

    <h3 class="mt-5">Uploaded Images</h3>
    <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#imageModal">View Uploaded Images</button>
</div>

<!-- Modal for displaying images -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Uploaded Images</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="imageGallery" class="d-flex flex-wrap gap-2"></div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
<script>
   document.addEventListener("DOMContentLoaded", () => {
    const uploadForm = document.getElementById("uploadForm");
    const imageGallery = document.getElementById("imageGallery");

    // Handle Form Submission using Axios
    uploadForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(uploadForm);

        try {
            const response = await axios.post("/api/images", formData, {
                headers: { "Content-Type": "multipart/form-data" },
            });
            alert("Successfuly Upload All Image");
        } catch (error) {
            console.error("Upload Error:", error);
            alert("Failed to upload images.");
        }
    });

    // Fetch Uploaded Images using Axios
    document.querySelector('[data-bs-target="#imageModal"]').addEventListener("click", async () => {
        imageGallery.innerHTML = ""; // Clear previous images
        try {
            const response = await axios.get("/api/images");
            response.data.forEach(img => {
                const imgElement = document.createElement("img");
                imgElement.src = img.imageurl;
                imgElement.classList.add("img-thumbnail");
                imgElement.style.width = "150px";
                imageGallery.appendChild(imgElement);
            });
        } catch (error) {
            console.error("Error fetching images:", error);
            alert("Failed to fetch images.");
        }
    });
});


</script>
</html>
